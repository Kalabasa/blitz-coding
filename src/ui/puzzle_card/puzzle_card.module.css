@value ease from "~ui/styles/animation.module.css";
@value accentColor from "~ui/styles/colors.module.css";
@value successColor from "~ui/styles/colors.module.css";
@value failureColor from "~ui/styles/colors.module.css";
@value codeEditorColor from "~ui/styles/colors.module.css";
@value codeEditorSecondaryColor from "~ui/styles/colors.module.css";
@value puzzleGraphicsColor from "~ui/styles/colors.module.css";
@value puzzleGraphicsPrimaryColor from "~ui/styles/colors.module.css";
@value cardBackColor from "~ui/styles/colors.module.css";
@value cardBackMarkColor from "~ui/styles/colors.module.css";
@value textFilter from "~ui/styles/colors.module.css";

@value cardTopBoxShadow: inset 0 1px 0 var(--globalTopLight, transparent);
@value cardLeftBoxShadow: inset 1px 0 0 var(--globalLeftLight, transparent);
@value cardRightBoxShadow: inset -1px 0 0 var(--globalRightLight, transparent);
@value cardBottomBoxShadow: inset 0 -1px 0 var(--globalBotomLight, transparent);

@value darkenFilter: brightness(0.6);

.puzzleCard {
  width: 600px;
  height: 650px;
}

.puzzleCard.blur {
  pointer-events: none;
}
.puzzleCard.blur .frontface,
.puzzleCard.blur .backface {
  filter: darkenFilter;
}
.frontface,
.backface {
  transition: filter 0.9s 0.2s ease;
}

.frontface {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  border-radius: 24px;
  overflow: hidden;
  backface-visibility: hidden;
}

.graphicsContainer {
  flex: 0 0 auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 336px;
  font-size: 10pt;
  background: puzzleGraphicsColor;
  color: puzzleGraphicsPrimaryColor;
  box-shadow: cardTopBoxShadow, cardLeftBoxShadow, cardRightBoxShadow;
  z-index: 1;
}

.modCodeContainer {
  flex: 0 0 auto;
  position: relative;
  padding: 24px 24px 12px;
  border-bottom: solid 1px codeEditorSecondaryColor;
  background: codeEditorColor;
  box-shadow: cardLeftBoxShadow, cardRightBoxShadow;
  user-select: none;
  z-index: 2;
}

.codeContainer {
  flex: 1 1 auto;
  position: relative;
  padding: 24px;
  font-size: 12pt;
  background: codeEditorColor;
  box-shadow: cardBottomBoxShadow, cardLeftBoxShadow, cardRightBoxShadow;
  overflow: auto;
  cursor: text;
  z-index: 3;
}
.modCodeContainer + .codeContainer {
  padding: 12px 24px 24px;
}

.modHeader {
  color: accentColor;
  opacity: 0.4;
  font-weight: lighter;
}

.modCode:global(.code) {
  margin: 0;
  color: transparent;
  text-shadow: 0 0 accentColor;
  font-weight: lighter;
}

.extraCode {
  margin: 0;
  font-weight: lighter;
  opacity: 0.4;
  user-select: none;
}

.editor {
  display: flex;
  justify-content: stretch;
}

.editor::before {
  content: "  ";
  flex: 0 0 auto;
}

.editor > :global(.code) {
  flex: 1 1 auto;
}

.submitButton {
  display: block;
  position: fixed;
  bottom: 12px;
  right: 12px;
  margin: 0;
  padding: 5mm;
  border: none;
  border-radius: 50%;
  background: transparent;
  outline: none;
  cursor: pointer;
  filter: textFilter;
  transition: transform 0.1s ease;
}
.submitButton:hover {
  transform: translateY(-2px);
}
.submitButton:active {
  transform: scale(0.96);
}

.waitIcon {
  position: fixed;
  bottom: 12px;
  right: 12px;
  padding: 5mm;
  opacity: 0.4;
  filter: textFilter;
  animation: waitAnimation 1s linear infinite;
}

@keyframes waitAnimation {
  to {
    transform: rotate(360deg);
  }
}

.backface {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  border-radius: 24px;
  background: cardBackColor;
  color: cardBackMarkColor;
  box-shadow: cardTopBoxShadow, cardBottomBoxShadow, cardLeftBoxShadow,
    cardRightBoxShadow;
  overflow: hidden;
  backface-visibility: hidden;
  transform: scale(1.003) rotateY(180deg) translate3d(0, 0, 0.5px);
}

.logo {
  position: absolute;
  left: 50%;
  top: 65%;
  width: 60px;
  transform: translate(-50%, -50%);
  transition: none 0.1s cubic-bezier(0.6, 2, 0, -1);
  transition-property: color, filter;
}

.puzzleCard.success .logo {
  color: successColor;
  filter: brightness(2) drop-shadow(0 0 4px successColor);
}

.puzzleCard.failure .logo {
  color: failureColor;
  filter: drop-shadow(0 0 2px failureColor);
}
